{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-app-recipe/src/components/Recipe.tsx\";\nimport React from 'react';\n\nclass Recipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n  }\n\n  handleClickRecipe() {\n    this.setState({\n      isModalOpen: true\n    });\n  }\n\n  handleClickClose() {\n    this.setState({\n      isModalOpen: false\n    });\n  }\n\n  render() {\n    let modal;\n\n    if (this.state.isModalOpen) {\n      modal = React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"modal-introduction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.introduction)), React.createElement(\"button\", {\n        className: \"modal-close-btn\",\n        onClick: () => {\n          this.handleClickClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"\\u3068\\u3058\\u308B\")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"recipe-card-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recipe-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recipe-item\",\n      onClick: () => {\n        this.handleClickRecipe();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.name), React.createElement(\"img\", {\n      src: this.props.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), modal));\n  }\n\n}\n\nexport default Recipe;","map":{"version":3,"sources":["/home/ec2-user/environment/react-app-recipe/src/components/Recipe.tsx"],"names":["React","Recipe","Component","constructor","props","state","isModalOpen","handleClickRecipe","setState","handleClickClose","render","modal","name","introduction","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAgH;AAE9GC,EAAAA,WAAW,CAACC,KAAD,EAAqF;AAC9F,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,WAAW,EAAC;AAAb,KAAX;AACD;;AACAC,EAAAA,iBAAiB,GAAE;AACnB,SAAKC,QAAL,CAAc;AAACF,MAAAA,WAAW,EAAC;AAAb,KAAd;AACD;;AAEAG,EAAAA,gBAAgB,GAAE;AAClB,SAAKD,QAAL,CAAc;AAACF,MAAAA,WAAW,EAAE;AAAd,KAAd;AACA;;AAEAI,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAJ;;AAEA,QAAI,KAAKN,KAAL,CAAWC,WAAf,EAA2B;AACzBK,MAAAA,KAAK,GAAE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKP,KAAL,CAAWQ,IAAhB,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKR,KAAL,CAAWS,YAAf,CAHF,CAFF,EAQE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AACC,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKJ,gBAAL;AAAwB,SADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,CADG,CAAP;AAeD;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACA,MAAA,SAAS,EAAC,aADV;AAEC,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKF,iBAAL;AAAyB,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,KAAL,CAAWQ,IAAf,CANA,EAOA;AAAK,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWU,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQCH,KARD,CADE,CADJ;AAcD;;AAjD6G;;AAoDhH,eAAeV,MAAf","sourcesContent":["import React from 'react';\nclass Recipe extends React.Component <{name: string, image: string,introduction:string}, {isModalOpen:boolean}> {\n  \n  constructor(props: Readonly<{name:string,image:string,introduction:string,isModalOpen:boolean}>){\n    super(props);\n    this.state={isModalOpen:false}\n  }\n   handleClickRecipe(){\n   this.setState({isModalOpen:true})\n }\n \n  handleClickClose(){\n  this.setState({isModalOpen: false}); \n }\n  \n  render() {\n    let modal;\n    \n    if (this.state.isModalOpen){\n      modal=(<div className='modal'>\n          <div className='modal-inner'>\n            <div className='modal-header'></div>\n            <div className='modal-introduction'>\n              <h2>{this.props.name}</h2>\n            \n              <p>{this.props.introduction}</p>\n              \n            </div>\n            <button className='modal-close-btn'\n             onClick={()=>{this.handleClickClose()}}>\n              とじる\n            </button>\n          </div>\n        </div>);\n    }\n    \n    return (\n        <div className=\"recipe-card-wrapper\">\n      <div className=\"recipe-card\">\n      <div \n      className=\"recipe-item\"\n       onClick={()=>{this.handleClickRecipe()}}\n       >\n       </div>\n      <p>{this.props.name}</p>\n      <img src={this.props.image}/>\n      {modal}\n     </div>\n     </div>\n    );\n  }\n}\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}