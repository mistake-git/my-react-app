{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-app-recipe/src/components/ContactForm.tsx\";\nimport React from 'react';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      content: '',\n      hasEmailError: false,\n      hasContentError: false,\n      isSubmitted: false\n    };\n  }\n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty\n    });\n  }\n\n  handleContentChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      content: inputValue,\n      hasContentError: isEmpty\n    });\n  }\n\n  handleSubmit() {\n    this.setState({\n      isSubmitted: true\n    });\n  }\n\n  render() {\n    const emailErrorText = this.state.hasEmailError ? React.createElement(\"p\", {\n      className: \"contact-message-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\") : '';\n    let contentErrorText;\n\n    if (this.state.hasContentError) {\n      contentErrorText = React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\");\n    }\n\n    let contactForm;\n\n    if (this.state.isSubmitted) {\n      contactForm = React.createElement(\"div\", {\n        className: \"contact-submit-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"\\u9001\\u4FE1\\u5B8C\\u4E86\");\n    } else {\n      contactForm = React.createElement(\"form\", {\n        onSubmit: () => {\n          this.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF08\\u5FC5\\u9808\\uFF09\"), React.createElement(\"input\", {\n        onChange: event => {\n          this.handleEmailChange(event);\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), emailErrorText, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\"), React.createElement(\"textarea\", {\n        onChange: event => {\n          this.handleContentChange(event);\n        },\n        value: this.state.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), contentErrorText, React.createElement(\"input\", {\n        value: \"\\u9001\\u4FE1\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"contact-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, contactForm);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/ec2-user/environment/react-app-recipe/src/components/ContactForm.tsx"],"names":["React","ContactForm","Component","constructor","props","state","name","email","content","hasEmailError","hasContentError","isSubmitted","handleEmailChange","event","inputValue","target","value","isEmpty","setState","handleContentChange","handleSubmit","render","emailErrorText","contentErrorText","contactForm"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass ContactForm extends React.Component<\n    {},\n    {\n        name: string;\n        email: string;\n        hasEmailError: boolean;\n        hasContentError: boolean;\n        content: string;\n        isSubmitted: boolean;\n    }\n> {\n    constructor(\n        props: Readonly<{\n            name: string;\n            image: string;\n            introduction: string;\n            isSubmitted: boolean;\n            email: string;\n        }>\n    ) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            content: '',\n            hasEmailError: false,\n            hasContentError: false,\n            isSubmitted: false\n        };\n    }\n\n    handleEmailChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const inputValue = event.target.value;\n        const isEmpty = inputValue === '';\n        this.setState({\n            email: inputValue,\n            hasEmailError: isEmpty\n        });\n    }\n\n    handleContentChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        const inputValue = event.target.value;\n        const isEmpty = inputValue === '';\n        this.setState({\n            content: inputValue,\n            hasContentError: isEmpty\n        });\n    }\n\n    handleSubmit() {\n        this.setState({ isSubmitted: true });\n    }\n\n    render() {\n        const emailErrorText = this.state.hasEmailError ? <p className='contact-message-error'>\n                    メールアドレスを入力してください\n                </p> : '';\n        let contentErrorText;\n        if (this.state.hasContentError) {\n            contentErrorText = (\n                <p className='contact-message-error'>\n                    お問い合わせ内容を入力してください\n                </p>\n            );\n        }\n\n        let contactForm;\n\n        if (this.state.isSubmitted) {\n            contactForm = (\n                <div className='contact-submit-message'>送信完了</div>\n            );\n        } else {\n            contactForm = (\n                <form\n                    onSubmit={() => {\n                        this.handleSubmit();\n                    }}\n                >\n                    <p>メールアドレス（必須）</p>\n\n                    <input\n                        onChange={event => {\n                            this.handleEmailChange(event);\n                        }}\n                        value={this.state.email}\n                    />\n                    {emailErrorText}\n                    <p>お問い合わせ内容</p>\n                    <textarea\n                        onChange={event => {\n                            this.handleContentChange(event);\n                        }}\n                        value={this.state.content}\n                    />\n                    {contentErrorText}\n                    <input value='送信' type='submit' />\n                </form>\n            );\n        }\n        return <div className='contact-form'>{contactForm}</div>;\n    }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}