{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-app-recipe/src/components/ContactForm.tsx\";\nimport React from 'react';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      content: '',\n      hasEmailError: false,\n      hasContentError: false,\n      isSubmitted: false\n    };\n  }\n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty\n    });\n  }\n\n  handleContentChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      content: inputValue,\n      hasContentError: isEmpty\n    });\n  }\n\n  handleSubmit() {\n    this.setState({\n      isSubmitted: true\n    });\n  }\n\n  render() {\n    let emailErrorText;\n\n    if (this.state.hasEmailError) {\n      emailErrorText = React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\");\n    }\n\n    let contentErrorText;\n\n    if (this.state.hasContentError) {\n      contentErrorText = React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\");\n    }\n\n    let contactForm;\n\n    if (this.state.isSubmitted) {\n      contactForm = React.createElement(\"div\", {\n        className: \"contact-submit-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"\\u9001\\u4FE1\\u5B8C\\u4E86\");\n    } else {\n      contactForm = React.createElement(\"form\", {\n        onSubmit: () => {\n          this.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF08\\u5FC5\\u9808\\uFF09\"), React.createElement(\"input\", {\n        onChange: event => {\n          this.handleEmailChange(event);\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), emailErrorText, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\"), React.createElement(\"textarea\", {\n        onChange: event => {\n          this.handleContentChange(event);\n        },\n        value: this.state.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), contentErrorText, React.createElement(\"input\", {\n        value: \"\\u9001\\u4FE1\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"contact-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, contactForm);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/ec2-user/environment/react-app-recipe/src/components/ContactForm.tsx"],"names":["React","ContactForm","Component","constructor","props","state","name","email","content","hasEmailError","hasContentError","isSubmitted","handleEmailChange","event","inputValue","target","value","isEmpty","setState","handleContentChange","handleSubmit","render","emailErrorText","contentErrorText","contactForm"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass ContactForm extends React.Component <\n        {},\n        {name:string, email: string, hasEmailError: boolean, hasContentError: boolean, content:string,isSubmitted:boolean}\n    > {\n    constructor(props: Readonly<{name:string,image:string,introduction:string,isSubmitted:boolean,email:string}>){\n        super(props);\n        this.state={\n            name: '',\n            email:'',\n            content:'',\n            hasEmailError:false,\n            hasContentError:false,\n            isSubmitted:false,\n    };\n }\n \n handleEmailChange(event: React.ChangeEvent<HTMLInputElement>){\n   const inputValue=event.target.value;\n   const isEmpty=inputValue==='';\n   this.setState({\n     email:inputValue,\n     hasEmailError:isEmpty,\n   });\n }\n \n handleContentChange(event: React.ChangeEvent<HTMLTextAreaElement>){\n   const inputValue=event.target.value;\n   const isEmpty=inputValue==='';\n   this.setState({\n     content:inputValue,\n     hasContentError:isEmpty,\n   });\n }\n\n  handleSubmit(){\n    this.setState({isSubmitted:true});\n  }\n  \n  render() {\n    let emailErrorText;\n    \n    if(this.state.hasEmailError){\n      emailErrorText=(<p className=\"contact-message-error\">メールアドレスを入力してください</p>);\n    }\n    let contentErrorText;\n    if(this.state.hasContentError){\n      contentErrorText=(<p className=\"contact-message-error\">\n      お問い合わせ内容を入力してください\n      </p>\n        );\n    }\n    \n    \n    \n     let contactForm;\n     \n    if(this.state.isSubmitted){\n      \n      contactForm=(<div className=\"contact-submit-message\">\n      送信完了\n      </div>\n      );\n    }else{\n      contactForm=(<form onSubmit={()=>{this.handleSubmit()}}>\n      <p>メールアドレス（必須）</p>\n      \n      <input\n      onChange={(event)=>{this.handleEmailChange(event)}}\n      value={this.state.email}\n      />\n      {emailErrorText}\n      <p>お問い合わせ内容</p>\n      <textarea\n      onChange={(event)=>{this.handleContentChange(event)}}\n       value={this.state.content}\n      />\n      {contentErrorText}\n      <input value=\"送信\"type=\"submit\"/>\n      </form>\n      );\n      \n    }\n    return (\n      <div className=\"contact-form\">\n        {contactForm}\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}